import { Component, OnInit, Input } from '@angular/core';

// Reference: JSON2HTMLTAble https://github.com/cve-search/cve-search/blob/master/web/minimal.py

@Component({
  selector: 'app-cve-details-row',
  templateUrl: './cve-details-row.component.html',
  styleUrls: ['./cve-details-row.component.css']
})
export class CveDetailsRowComponent implements OnInit {
  @Input() element:any;
  @Input() complex:Boolean=false;

  constructor() { }

  ngOnInit() {
    this.element = this.complex 
                    ? this.JSON2ComplexRow(this.element) 
                    : this.JSON2TableRow(this.element);
  }

  JSON2TableRow(element:any) {
    if (element.type === "date") {
      return {value:element.value, type: "date"};
    }
    if (typeof element.value === "string") {
      return {value: element.value};
    }

    throw new ReferenceError(`Unknown simple data type for ${element} (${typeof element})`);    
  }

  JSON2ComplexRow(element:any) {
    if (Array.isArray(element)) {
      if (element.length === 1) return this.JSON2TableRow({value: element[0]});

      return this.Obj2Row(element);
    }
    if (typeof element === "object") {
      return this.Obj2Row(element);
    }

    throw new ReferenceError(`Unknown complex data type for ${element}`);    
  }

  Obj2Row(element:any) {
    const el = element.value || element
    const type = Object.values(el)
                        .filter(v => v !== undefined && v !== null)
                        .every(e => this.isSimple(e)) ? "dictionary" : "complex";
    return {value: el, keys:Object.keys(el), type};
  }

  isSimple(value:any):Boolean {
    return typeof value === "string" || value instanceof Date;
  }

}
